{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\User\\\\Desktop\\\\CSIT Project\\\\ReactAppPractice\\\\redux-saga-course-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUsers),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetUsersRequest),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteUser),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchDeleteUserRequest),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createUser),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchCreateUserRequest);\n\nimport { takeEvery, takeLatest, take, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users';\n\nfunction getUsers() {\n  var result;\n  return _regeneratorRuntime.wrap(function getUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getUsers);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put(actions.getUsersSuccess({\n            items: result.data.data\n          }));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(actions.usersError({\n            error: 'An error occurred when trying to get the users'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetUsersRequest() {\n  return _regeneratorRuntime.wrap(function watchGetUsersRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nfunction deleteUser(userId) {\n  return _regeneratorRuntime.wrap(function deleteUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(api.deleteUser, userId);\n\n        case 3:\n          _context3.next = 5;\n          return call(getUsers);\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put(actions.usersError({\n            error: 'An error occurred when trying to delete the user'\n          }));\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 7]]);\n}\n\nfunction watchDeleteUserRequest() {\n  var _ref, payload;\n\n  return _regeneratorRuntime.wrap(function watchDeleteUserRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!true) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 3;\n          return take(actions.Types.DELETE_USER_REQUEST);\n\n        case 3:\n          _ref = _context4.sent;\n          payload = _ref.payload;\n          _context4.next = 7;\n          return call(deleteUser, payload.userId);\n\n        case 7:\n          _context4.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n\nfunction createUser(_ref2) {\n  var payload;\n  return _regeneratorRuntime.wrap(function createUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(api.createUser, {\n            firstName: payload.firstName,\n            lastName: payload.lastName\n          });\n\n        case 4:\n          _context5.next = 6;\n          return call(getUsers);\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 12;\n          return put(actions.usersError({\n            error: 'An error occurred when trying to create the user'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this, [[1, 8]]);\n}\n\nfunction watchCreateUserRequest() {\n  return _regeneratorRuntime.wrap(function watchCreateUserRequest$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(actions.Types.CREATE_USER_REQUEST, createUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nvar userSagas = [fork(watchGetUsersRequest), fork(watchDeleteUserRequest), fork(watchCreateUserRequest)];\nexport default userSagas;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\CSIT Project\\ReactAppPractice\\redux-saga-course-master\\src\\sagas\\users.js"],"names":["getUsers","watchGetUsersRequest","deleteUser","watchDeleteUserRequest","createUser","watchCreateUserRequest","takeEvery","takeLatest","take","call","put","fork","actions","api","result","getUsersSuccess","items","data","usersError","error","Types","GET_USERS_REQUEST","userId","DELETE_USER_REQUEST","payload","firstName","lastName","CREATE_USER_REQUEST","userSagas"],"mappings":"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","sourcesContent":["import {takeEvery, takeLatest, take, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users';\n\nfunction* getUsers(){\n\ttry{\n\t\tconst result = yield call(api.getUsers);\n\t\tyield put(actions.getUsersSuccess({\n\t\t\titems: result.data.data\n\t\t}));\n\t}catch(e){\n        yield put(actions.usersError({\n            error: 'An error occurred when trying to get the users'\n        }));\n\t}\n}\n\nfunction* watchGetUsersRequest(){\n\tyield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n}\n\nfunction* deleteUser(userId){\n    try{\n        yield call(api.deleteUser, userId);\n\n        yield call(getUsers);\n    }catch(e){\n        yield put(actions.usersError({\n            error: 'An error occurred when trying to delete the user'\n        }));\n\t}\n}\n\nfunction* watchDeleteUserRequest(){\n    while(true){\n        const {payload} = yield take(actions.Types.DELETE_USER_REQUEST);\n        yield call(deleteUser, payload.userId);\n    }\n}\n\nfunction* createUser({payload}){\n    try{\n        yield call(api.createUser, {\n            firstName: payload.firstName,\n            lastName: payload.lastName\n        });\n\n        yield call(getUsers);\n\n    }catch(e){\n        yield put(actions.usersError({\n            error: 'An error occurred when trying to create the user'\n        }));\n    }\n}\n\nfunction* watchCreateUserRequest(){\n    yield takeLatest(actions.Types.CREATE_USER_REQUEST, createUser);\n}\n\nconst userSagas = [\n\tfork(watchGetUsersRequest),\n\tfork(watchDeleteUserRequest),\n\tfork(watchCreateUserRequest)\n];\n\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}