{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CSIT Project\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; //import React from 'react'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  title\n}) => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Fetch One Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Delete Task\n\n\n  const deleteTask = async id => {\n    //Delete request from json\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    console.log('delete', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    console.log(\"Toggled: \", id); //Get data \n\n    const a = await fetchTask(id);\n    const updateTask = { ...a,\n      reminder: !a.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updateTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //fetch task from http localhost:5000\n  //Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      colorIndicator: showAddTask ? \"red\" : \"blue\",\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 27\n    }, this) : \"No Tasks To Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}; //Class Component\n// class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class</h1>\n//   }\n// }\n\n\n_s(App, \"l0znokEv4xaNawFte18f2HGKyzo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/CSIT Project/task-tracker/src/App.js"],"names":["useState","useEffect","FaTrashAlt","Header","Tasks","AddTask","App","title","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","deleteTask","method","console","log","filter","task","toggleReminder","a","updateTask","reminder","header","body","JSON","stringify","map","addTask","headers","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { FaTrashAlt } from 'react-icons/fa'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n//import React from 'react'\n\nconst App = ({title}) => {  \nconst [showAddTask, setShowAddTask] = useState(false)\n  \nconst [tasks , setTasks] = useState([])\n\nuseEffect(() => {\n  const getTasks =  async () => {\n    const tasksFromServer = await fetchTasks()\n    setTasks(tasksFromServer)\n  }\n  getTasks()\n}, [])\n\n//Fetch Tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n\n  return data\n}\n\n//Fetch One Task\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n\n//Delete Task\nconst deleteTask = async (id) =>{\n  //Delete request from json\n  await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'})\n\n  console.log('delete', id)\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  console.log(\"Toggled: \", id);\n\n  //Get data \n  const a = await fetchTask(id)\n  const updateTask = {...a, reminder:!a.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    header: {\n      'Content-type':'application/json'\n    },\n    body: JSON.stringify(updateTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n      task.id === id ? {\n        ...task, reminder : !task.reminder\n      } : task\n    )\n  )\n}\n\n//fetch task from http localhost:5000\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch(`http://localhost:5000/tasks`, {\n    method: 'POST', headers: {'Content-type':'application/json',\n  }, \n  body: JSON.stringify(task),\n})\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n  \n}\n\n  return (\n    <div className='container'>\n      <Header title={\"Add\"} onAdd={() => setShowAddTask(!showAddTask)} colorIndicator={showAddTask ? \"red\" : \"blue\"} showAdd={showAddTask} />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : \"No Tasks To Show\"}\n    </div>\n  )\n}\n\n//Class Component\n// class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class</h1>\n//   }\n// }\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}