{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CSIT Project\\\\task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; //import React from 'react'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  title\n}) => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {}); //Delete Task\n\n  const deleteTask = id => {\n    console.log('delete', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    console.log(\"Toggled: \", id);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //fetch task from http localhost:5000\n  //Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      colorIndicator: showAddTask ? \"red\" : \"blue\",\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this) : \"No Tasks To Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}; //Class Component\n// class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class</h1>\n//   }\n// }\n\n\n_s(App, \"l0znokEv4xaNawFte18f2HGKyzo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/CSIT Project/task-tracker/src/App.js"],"names":["useState","useEffect","FaTrashAlt","Header","Tasks","AddTask","App","title","showAddTask","setShowAddTask","tasks","setTasks","deleteTask","id","console","log","filter","task","toggleReminder","map","reminder","addTask","Math","floor","random","newTask","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACU,KAAD,EAASC,QAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT,CALyB,CASzB;;AACA,QAAMW,UAAU,GAAIC,EAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,EAAtB;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAHD,CAVyB,CAezB;;;AACA,QAAMK,cAAc,GAAIL,EAAD,IAAQ;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,EAAzB;AACAF,IAAAA,QAAQ,CACND,KAAK,CAACS,GAAN,CAAWF,IAAD,IACRA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB,EACf,GAAGI,IADY;AACNG,MAAAA,QAAQ,EAAG,CAACH,IAAI,CAACG;AADX,KAAjB,GAEIH,IAHN,CADM,CAAR;AAOD,GATD,CAhByB,CA2BzB;AAEA;;;AACA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMJ,EAAE,GAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAE;AAACZ,MAAAA,EAAD;AAAK,SAAGI;AAAR,KAAf;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAJD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAsB,MAAA,KAAK,EAAE,MAAMhB,cAAc,CAAC,CAACD,WAAF,CAAjD;AAAiE,MAAA,cAAc,EAAEA,WAAW,GAAG,KAAH,GAAW,MAAvG;AAA+G,MAAA,OAAO,EAAEA;AAAxH;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEa;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHlB,EAKGX,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEE,UAA/B;AAA2C,MAAA,QAAQ,EAAEM;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA4F,kBAL/F;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CD,C,CA+CA;AACA;AACA;AACA;AACA;AACA;;;GApDMZ,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { FaTrashAlt } from 'react-icons/fa'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n//import React from 'react'\n\nconst App = ({title}) => {  \nconst [showAddTask, setShowAddTask] = useState(false)\n  \nconst [tasks , setTasks] = useState([])\n\nuseEffect(() => {\n\n})\n\n//Delete Task\nconst deleteTask = (id) =>{\n  console.log('delete', id)\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  console.log(\"Toggled: \", id);\n  setTasks(\n    tasks.map((task) => \n      task.id === id ? {\n        ...task, reminder : !task.reminder\n      } : task\n    )\n  )\n}\n\n//fetch task from http localhost:5000\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask ={id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n  return (\n    <div className='container'>\n      <Header title={\"Add\"} onAdd={() => setShowAddTask(!showAddTask)} colorIndicator={showAddTask ? \"red\" : \"blue\"} showAdd={showAddTask} />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : \"No Tasks To Show\"}\n    </div>\n  )\n}\n\n//Class Component\n// class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class</h1>\n//   }\n// }\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}